{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Instaclone-main\\\\instaclone\\\\Frontend\\\\frontend\\\\src\\\\components\\\\form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n//import regeneratorRuntime from \"regenerator-runtime\";\nimport './form.css';\nimport Postview from \"./postview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [img, setimg] = useState(\"\");\n  const [Author, setauthor] = useState(\"\");\n  const [Location, setloc] = useState(\"\");\n  const [Description, setdes] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', img);\n    formData.append('Author', Author);\n    formData.append('Location', Location);\n    formData.append('Description', Description);\n    await fetch(\"https://instabackend-loo2.onrender.com/form\", {\n      method: 'post',\n      body: formData\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    }).catch(e => console.log(e));\n    navigate('/fetch');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Postview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      id: \"border\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        encType: \"multipart/form-data\",\n        onSubmit: handleSubmit,\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          accept: \"image/*\",\n          onChange: e => {\n            setimg(e.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 120\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Author\",\n            name: \"Author\",\n            className: \"authorclass\",\n            onChange: e => {\n              setauthor(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 154\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Location\",\n            name: \"Location\",\n            className: \"authorclass\",\n            onChange: e => {\n              setloc(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 155\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Description\",\n          className: \"textareaClass\",\n          placeholder: \"Description\",\n          cols: \"30\",\n          rows: \"5\",\n          onChange: e => {\n            setdes(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 179\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n/* \"proxy\":\"https://insta-node.onrender.com/posts\" */\n_s(Form, \"viYXiaWFSueEE3rOCcmGwtdNa5Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useNavigate","Postview","Form","img","setimg","Author","setauthor","Location","setloc","Description","setdes","navigate","handleSubmit","event","preventDefault","formData","FormData","append","fetch","method","body","then","res","json","data","console","log","catch","e","target","files","value"],"sources":["C:/Users/dell/Desktop/Instaclone-main/instaclone/Frontend/frontend/src/components/form.js"],"sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import regeneratorRuntime from \"regenerator-runtime\";\r\nimport './form.css'\r\nimport Postview from \"./postview\";\r\nconst Form = () => {\r\n    const [img, setimg] = useState(\"\");\r\n    const [Author, setauthor] = useState(\"\");\r\n    const [Location, setloc] = useState(\"\");\r\n    const [Description, setdes] = useState(\"\");\r\n    const navigate = useNavigate()\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', img)\r\n        formData.append('Author', Author)\r\n        formData.append('Location', Location)\r\n        formData.append('Description', Description);\r\n        await fetch(\"https://instabackend-loo2.onrender.com/form\", { method: 'post', body: formData }).then((res) => res.json()).then((data) => { console.log(data); }).catch((e) => console.log(e))\r\n        navigate('/fetch')\r\n    }\r\n    return (\r\n        <>\r\n            <Postview />\r\n            <center id=\"border\" >\r\n                <form  encType=\"multipart/form-data\" onSubmit={handleSubmit}  className=\"formContainer\">\r\n                    <input type=\"file\" name=\"file\" accept='image/*' onChange={(e) => { setimg(e.target.files[0]) }} /> <br />\r\n                    <div className=\"auth\">\r\n                        <input type=\"text\" placeholder=\"Author\" name=\"Author\"  className=\"authorclass\" onChange={(e) => { setauthor(e.target.value) }} /><br></br>\r\n                        <input type=\"text\" placeholder=\"Location\" name=\"Location\"  className=\"authorclass\" onChange={(e) => { setloc(e.target.value) }} /><br></br>\r\n                    </div>\r\n                    <textarea name=\"Description\"  className=\"textareaClass\" placeholder=\"Description\" cols=\"30\" rows=\"5\" onChange={(e) => { setdes(e.target.value) }}></textarea> <br />\r\n                    <button type=\"submit\">Post</button>\r\n                </form>\r\n            </center>\r\n        </>\r\n    )\r\n}\r\n/* \"proxy\":\"https://insta-node.onrender.com/posts\" */\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}